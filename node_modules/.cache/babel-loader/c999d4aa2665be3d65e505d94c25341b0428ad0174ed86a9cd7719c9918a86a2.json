{"ast":null,"code":"import { Actions } from \"./action\";\n\n// setting the initialValues\nexport let initialValues = {\n  data: []\n};\nexport function TodoReducer(state, action) {\n  switch (action.type) {\n    case Actions.ADD:\n      var newData = [...state.data]; //to get the old data\n      newData.push({\n        //pushing the new data\n        name: action.payload,\n        completed: false\n      });\n      return {\n        ...state,\n        data: newData\n      };\n    case Actions.CHANGE:\n      var newData = [...state.data]; //to get the old data\n\n      //to reverse the completed value\n      newData[action.payload.index].completed = action.payload.completed;\n      return {\n        ...state,\n        data: newData\n      };\n    case Actions.CLEAR:\n      return initialValues;\n    default:\n      return initialValues;\n  }\n}\n_c = TodoReducer;\nvar _c;\n$RefreshReg$(_c, \"TodoReducer\");","map":{"version":3,"names":["Actions","initialValues","data","TodoReducer","state","action","type","ADD","newData","push","name","payload","completed","CHANGE","index","CLEAR","_c","$RefreshReg$"],"sources":["C:/Users/Vishnu Priya/Documents/reacttesting3/src/components/ReducerComponent/TodoReducer.js"],"sourcesContent":["import { Actions } from \"./action\";\r\n\r\n// setting the initialValues\r\nexport let initialValues = {\r\n  data: [],\r\n};\r\n\r\nexport function TodoReducer(state, action) {\r\n  switch (action.type) {\r\n    case Actions.ADD:\r\n      var newData = [...state.data]; //to get the old data\r\n      newData.push({\r\n        //pushing the new data\r\n        name: action.payload,\r\n        completed: false,\r\n      });\r\n\r\n      return { ...state, data: newData };\r\n\r\n    case Actions.CHANGE:\r\n      var newData = [...state.data]; //to get the old data\r\n\r\n      //to reverse the completed value\r\n      newData[action.payload.index].completed = action.payload.completed;\r\n      return { ...state, data: newData };\r\n\r\n    case Actions.CLEAR:\r\n      return initialValues;\r\n\r\n    default:\r\n      return initialValues;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,UAAU;;AAElC;AACA,OAAO,IAAIC,aAAa,GAAG;EACzBC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACzC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,OAAO,CAACO,GAAG;MACd,IAAIC,OAAO,GAAG,CAAC,GAAGJ,KAAK,CAACF,IAAI,CAAC,CAAC,CAAC;MAC/BM,OAAO,CAACC,IAAI,CAAC;QACX;QACAC,IAAI,EAAEL,MAAM,CAACM,OAAO;QACpBC,SAAS,EAAE;MACb,CAAC,CAAC;MAEF,OAAO;QAAE,GAAGR,KAAK;QAAEF,IAAI,EAAEM;MAAQ,CAAC;IAEpC,KAAKR,OAAO,CAACa,MAAM;MACjB,IAAIL,OAAO,GAAG,CAAC,GAAGJ,KAAK,CAACF,IAAI,CAAC,CAAC,CAAC;;MAE/B;MACAM,OAAO,CAACH,MAAM,CAACM,OAAO,CAACG,KAAK,CAAC,CAACF,SAAS,GAAGP,MAAM,CAACM,OAAO,CAACC,SAAS;MAClE,OAAO;QAAE,GAAGR,KAAK;QAAEF,IAAI,EAAEM;MAAQ,CAAC;IAEpC,KAAKR,OAAO,CAACe,KAAK;MAChB,OAAOd,aAAa;IAEtB;MACE,OAAOA,aAAa;EACxB;AACF;AAACe,EAAA,GAzBeb,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}