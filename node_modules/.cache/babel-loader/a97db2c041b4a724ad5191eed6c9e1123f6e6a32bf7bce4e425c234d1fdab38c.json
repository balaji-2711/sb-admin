{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishnu Priya\\\\Documents\\\\reacttesting3\\\\src\\\\components\\\\NestedComponents.js\\\\UseRef.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n//to avoid infinite re-rendering\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UseRef() {\n  _s();\n  let [name, setName] = useState(\"\");\n  let count = useRef(0);\n  let rollRef = useRef(null);\n\n  //without dependency array\n  //triggered automatically even if there is no state change happening\n  useEffect(() => {\n    count.current = count.current + 1;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Use Ref Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: count.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Roll no.\",\n      ref: rollRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: () => rollRef.current.focus(),\n      children: \"Click me to focus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(UseRef, \"JNnnjXYKVeTJJGkQQvmDBgvmWUk=\");\n_c = UseRef;\nexport default UseRef;\nvar _c;\n$RefreshReg$(_c, \"UseRef\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Button","jsxDEV","_jsxDEV","UseRef","_s","name","setName","count","rollRef","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","ref","variant","onClick","focus","_c","$RefreshReg$"],"sources":["C:/Users/Vishnu Priya/Documents/reacttesting3/src/components/NestedComponents.js/UseRef.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n//to avoid infinite re-rendering\r\nfunction UseRef() {\r\n  let [name, setName] = useState(\"\");\r\n  let count = useRef(0);\r\n\r\n  let rollRef = useRef(null);\r\n\r\n  //without dependency array\r\n  //triggered automatically even if there is no state change happening\r\n  useEffect(() => {\r\n    count.current = count.current + 1;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <h1>Use Ref Example</h1>\r\n      <input\r\n        type={\"text\"}\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        placeholder=\"Name\"\r\n      />\r\n      <br />\r\n      <span>{count.current}</span>\r\n      <br />\r\n      <input type=\"text\" placeholder=\"Roll no.\" ref={rollRef} />\r\n      <br />\r\n      <br />\r\n\r\n      <Button variant=\"primary\" onClick={() => rollRef.current.focus()}>\r\n        Click me to focus\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UseRef;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,iBAAiB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,IAAIS,KAAK,GAAGR,MAAM,CAAC,CAAC,CAAC;EAErB,IAAIS,OAAO,GAAGT,MAAM,CAAC,IAAI,CAAC;;EAE1B;EACA;EACAF,SAAS,CAAC,MAAM;IACdU,KAAK,CAACE,OAAO,GAAGF,KAAK,CAACE,OAAO,GAAG,CAAC;EACnC,CAAC,CAAC;EAEF,oBACEP,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BT,OAAA;MAAAS,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBb,OAAA;MACEc,IAAI,EAAE,MAAO;MACbC,KAAK,EAAEZ,IAAK;MACZa,QAAQ,EAAGC,CAAC,IAAKb,OAAO,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,WAAW,EAAC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACFb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNb,OAAA;MAAAS,QAAA,EAAOJ,KAAK,CAACE;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5Bb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNb,OAAA;MAAOc,IAAI,EAAC,MAAM;MAACK,WAAW,EAAC,UAAU;MAACC,GAAG,EAAEd;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1Db,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENb,OAAA,CAACF,MAAM;MAACuB,OAAO,EAAC,SAAS;MAACC,OAAO,EAAEA,CAAA,KAAMhB,OAAO,CAACC,OAAO,CAACgB,KAAK,CAAC,CAAE;MAAAd,QAAA,EAAC;IAElE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACX,EAAA,CAjCQD,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAmCf,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}